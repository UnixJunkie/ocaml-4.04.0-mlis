["module"; "Gsl_ieee"; ["Mty_signature"; ["Sig_type"; "ieee_type"; 0; 
                                         ["Type_variant"; ["constructor"; 
                                                          "NAN"; ["tuple"]]; 
                                         ["constructor"; "INF"; ["tuple"]]; 
                                         ["constructor"; "NORMAL"; ["tuple"]]; 
                                         ["constructor"; "DENORMAL"; 
                                         ["tuple"]]; ["constructor"; 
                                                     "ZERO"; ["tuple"]]]]; 
                       ["Sig_type"; "float_rep"; 0; ["Type_record"; [
                                                                    "label"; 
                                                                    "sign"; 
                                                                    [
                                                                    "Tconstr"; 
                                                                    [
                                                                    "Pident"; 
                                                                    "int"]]]; 
                                                    ["label"; "mantissa"; 
                                                    ["Tconstr"; ["Pident"; 
                                                                "string"]]]; 
                                                    ["label"; "exponent"; 
                                                    ["Tconstr"; ["Pident"; 
                                                                "int"]]]; 
                                                    ["label"; "ieee_type"; 
                                                    ["Tconstr"; ["Pident"; 
                                                                "ieee_type"]]]]]; 
                       ["Sig_value"; "rep_of_float"; ["Tarrow"; ["Tconstr"; 
                                                                ["Pident"; 
                                                                "float"]]; 
                                                     ["Tconstr"; ["Pident"; 
                                                                 "float_rep"]]]]; 
                       ["Sig_value"; "print"; ["Tarrow"; ["Tconstr"; 
                                                         ["Pident"; "float"]]; 
                                              ["Tconstr"; ["Pident"; 
                                                          "string"]]]]; 
                       ["Sig_type"; "precision"; 0; ["Type_variant"; 
                                                    ["constructor"; "SINGLE"; 
                                                    ["tuple"]]; ["constructor"; 
                                                                "DOUBLE"; 
                                                                ["tuple"]]; 
                                                    ["constructor"; "EXTENDED"; 
                                                    ["tuple"]]]]; ["Sig_type"; 
                                                                  "rounding"; 
                                                                  0; 
                                                                  ["Type_variant"; 
                                                                  ["constructor"; 
                                                                  "TO_NEAREST"; 
                                                                  ["tuple"]]; 
                                                                  ["constructor"; 
                                                                  "DOWN"; 
                                                                  ["tuple"]]; 
                                                                  ["constructor"; 
                                                                  "UP"; 
                                                                  ["tuple"]]; 
                                                                  ["constructor"; 
                                                                  "TO_ZERO"; 
                                                                  ["tuple"]]]]; 
                       ["Sig_type"; "exceptions"; 0; ["Type_variant"; 
                                                     ["constructor"; 
                                                     "MASK_INVALID"; 
                                                     ["tuple"]]; ["constructor"; 
                                                                 "MASK_DENORMALIZED"; 
                                                                 ["tuple"]]; 
                                                     ["constructor"; 
                                                     "MASK_DIVISION_BY_ZERO"; 
                                                     ["tuple"]]; ["constructor"; 
                                                                 "MASK_OVERFLOW"; 
                                                                 ["tuple"]]; 
                                                     ["constructor"; 
                                                     "MASK_UNDERFLOW"; 
                                                     ["tuple"]]; ["constructor"; 
                                                                 "MASK_ALL"; 
                                                                 ["tuple"]]; 
                                                     ["constructor"; 
                                                     "TRAP_INEXACT"; 
                                                     ["tuple"]]]]; ["Sig_value"; 
                                                                   "set_mode"; 
                                                                   ["Tarrow"; 
                                                                   ["Tconstr"; 
                                                                   ["Pident"; 
                                                                   "option"]; 
                                                                   ["Tconstr"; 
                                                                   ["Pident"; 
                                                                   "precision"]]]; 
                                                                   ["Tarrow"; 
                                                                   ["Tconstr"; 
                                                                   ["Pident"; 
                                                                   "option"]; 
                                                                   ["Tconstr"; 
                                                                   ["Pident"; 
                                                                   "rounding"]]]; 
                                                                   ["Tarrow"; 
                                                                   ["Tconstr"; 
                                                                   ["Pident"; 
                                                                   "list"]; 
                                                                   ["Tconstr"; 
                                                                   ["Pident"; 
                                                                   "exceptions"]]]; 
                                                                   ["Tconstr"; 
                                                                   ["Pident"; 
                                                                   "unit"]]]]]]; 
                       ["Sig_value"; "env_setup"; ["Tarrow"; ["Tconstr"; 
                                                             ["Pident"; 
                                                             "unit"]]; 
                                                  ["Tconstr"; ["Pident"; 
                                                              "unit"]]]]; 
                       ["Sig_type"; "excepts"; 0; ["Type_variant"; ["constructor"; 
                                                                   "FE_INEXACT"; 
                                                                   ["tuple"]]; 
                                                  ["constructor"; "FE_DIVBYZERO"; 
                                                  ["tuple"]]; ["constructor"; 
                                                              "FE_UNDERFLOW"; 
                                                              ["tuple"]]; 
                                                  ["constructor"; "FE_OVERFLOW"; 
                                                  ["tuple"]]; ["constructor"; 
                                                              "FE_INVALID"; 
                                                              ["tuple"]]; 
                                                  ["constructor"; "FE_ALL_EXCEPT"; 
                                                  ["tuple"]]]]; ["Sig_value"; 
                                                                "clear_except"; 
                                                                ["Tarrow"; 
                                                                ["Tconstr"; 
                                                                ["Pident"; 
                                                                "list"]; 
                                                                ["Tconstr"; 
                                                                ["Pident"; 
                                                                "excepts"]]]; 
                                                                ["Tconstr"; 
                                                                ["Pident"; 
                                                                "unit"]]]]; 
                       ["Sig_value"; "test_except"; ["Tarrow"; ["Tconstr"; 
                                                               ["Pident"; 
                                                               "list"]; 
                                                               ["Tconstr"; 
                                                               ["Pident"; 
                                                               "excepts"]]]; 
                                                    ["Tconstr"; ["Pident"; 
                                                                "list"]; 
                                                    ["Tconstr"; ["Pident"; 
                                                                "excepts"]]]]]]]
