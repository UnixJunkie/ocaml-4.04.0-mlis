["module"; "Dbus_type"; ["Mty_signature"; ["Sig_type"; "base"; 0; ["Type_variant"; 
                                                                  ["constructor"; 
                                                                  "B_byte"; 
                                                                  ["tuple"]]; 
                                                                  ["constructor"; 
                                                                  "B_boolean"; 
                                                                  ["tuple"]]; 
                                                                  ["constructor"; 
                                                                  "B_int16"; 
                                                                  ["tuple"]]; 
                                                                  ["constructor"; 
                                                                  "B_uint16"; 
                                                                  ["tuple"]]; 
                                                                  ["constructor"; 
                                                                  "B_int32"; 
                                                                  ["tuple"]]; 
                                                                  ["constructor"; 
                                                                  "B_uint32"; 
                                                                  ["tuple"]]; 
                                                                  ["constructor"; 
                                                                  "B_int64"; 
                                                                  ["tuple"]]; 
                                                                  ["constructor"; 
                                                                  "B_uint64"; 
                                                                  ["tuple"]]; 
                                                                  ["constructor"; 
                                                                  "B_double"; 
                                                                  ["tuple"]]; 
                                                                  ["constructor"; 
                                                                  "B_string"; 
                                                                  ["tuple"]]; 
                                                                  ["constructor"; 
                                                                  "B_object_path"; 
                                                                  ["tuple"]]; 
                                                                  ["constructor"; 
                                                                  "B_signature"; 
                                                                  ["tuple"]]]]; 
                        ["Sig_type"; "t"; 0; ["Type_variant"; ["constructor"; 
                                                              "T_base"; 
                                                              ["tuple"; 
                                                              ["Tconstr"; 
                                                              ["Pident"; 
                                                              "base"]]]]; 
                                             ["constructor"; "T_variant"; 
                                             ["tuple"]]; ["constructor"; 
                                                         "T_array"; [
                                                                    "tuple"; 
                                                                    [
                                                                    "Tconstr"; 
                                                                    [
                                                                    "Pident"; 
                                                                    "t"]]]]; 
                                             ["constructor"; "T_struct"; 
                                             ["tuple"; ["Tconstr"; ["Pident"; 
                                                                   "list"]; 
                                                       ["Tconstr"; ["Pident"; 
                                                                   "t"]]]]]]]; 
                        ["Sig_type"; "endian"; 0; ["Type_variant"; ["constructor"; 
                                                                   "Little_endian"; 
                                                                   ["tuple"]]; 
                                                  ["constructor"; "Big_endian"; 
                                                  ["tuple"]]]]; ["Sig_value"; 
                                                                "to_string"; 
                                                                ["Tarrow"; 
                                                                ["Tconstr"; 
                                                                ["Pident"; 
                                                                "t"]]; 
                                                                ["Tconstr"; 
                                                                ["Pident"; 
                                                                "string"]]]]; 
                        ["Sig_value"; "to_code"; ["Tarrow"; ["Tconstr"; 
                                                            ["Pident"; "t"]]; 
                                                 ["Tconstr"; ["Pident"; 
                                                             "string"]]]]; 
                        ["Sig_value"; "is_basic_type"; ["Tarrow"; ["Tconstr"; 
                                                                  ["Pident"; 
                                                                  "t"]]; 
                                                       ["Tconstr"; ["Pident"; 
                                                                   "bool"]]]]; 
                        ["Sig_value"; "is_container_type"; ["Tarrow"; 
                                                           ["Tconstr"; 
                                                           ["Pident"; "t"]]; 
                                                           ["Tconstr"; 
                                                           ["Pident"; "bool"]]]]; 
                        ["Sig_value"; "alignment_of"; ["Tarrow"; ["Tconstr"; 
                                                                 ["Pident"; 
                                                                 "t"]]; 
                                                      ["Tconstr"; ["Pident"; 
                                                                  "int"]]]]; 
                        ["Sig_value"; "get_padding"; ["Tarrow"; ["Tconstr"; 
                                                                ["Pident"; 
                                                                "int"]]; 
                                                     ["Tarrow"; ["Tconstr"; 
                                                                ["Pident"; 
                                                                "int"]]; 
                                                     ["Tconstr"; ["Pident"; 
                                                                 "int"]]]]]; 
                        ["Sig_type"; "sig_error"; 0; ["Type_variant"; 
                                                     ["constructor"; 
                                                     "Sig_incomplete"; 
                                                     ["tuple"]]; ["constructor"; 
                                                                 "Sig_invalid"; 
                                                                 ["tuple"; 
                                                                 ["Tconstr"; 
                                                                 ["Pident"; 
                                                                 "string"]]]]; 
                                                     ["constructor"; 
                                                     "Sig_invalid_char"; 
                                                     ["tuple"; ["Tconstr"; 
                                                               ["Pident"; 
                                                               "char"]]]]; 
                                                     ["constructor"; 
                                                     "Sig_not_nul_terminated"; 
                                                     ["tuple"]]]]; ["Sig_value"; 
                                                                   "sig_error_message"; 
                                                                   ["Tarrow"; 
                                                                   ["Tconstr"; 
                                                                   ["Pident"; 
                                                                   "sig_error"]]; 
                                                                   ["Tconstr"; 
                                                                   ["Pident"; 
                                                                   "string"]]]]; 
                        ["Sig_unknown"]; ["Sig_value"; "signature_of_string"; 
                                         ["Tarrow"; ["Tconstr"; ["Pident"; 
                                                                "string"]]; 
                                         ["Tconstr"; ["Pident"; "list"]; 
                                         ["Tconstr"; ["Pident"; "t"]]]]]; 
                        ["Sig_value"; "signature_of_types"; ["Tarrow"; 
                                                            ["Tconstr"; 
                                                            ["Pident"; 
                                                            "list"]; 
                                                            ["Tconstr"; 
                                                            ["Pident"; "t"]]]; 
                                                            ["Tconstr"; 
                                                            ["Pident"; 
                                                            "string"]]]]]]
